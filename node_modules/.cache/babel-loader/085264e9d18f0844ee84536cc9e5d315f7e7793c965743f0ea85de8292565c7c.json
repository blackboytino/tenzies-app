{"ast":null,"code":"var _jsxFileName = \"/Users/Ogaga/notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Die from \"./components/die\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  function allNewDice() {\n    const newArray = [];\n    for (var i = 0; i <= 9; i++) {\n      newArray.push(Math.floor(Math.random() * 7));\n    }\n    return newArray;\n  }\n  const [dice, setDice] = React.useState(allNewDice());\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die\n  }, \"\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 39\n  }, this));\n  function rollDice() {\n    setDice(allNewDice());\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"appview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"textarea\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tenzies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice\",\n        children: diceElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rollbtn-div\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"rollbtn\",\n          onClick: rollDice,\n          children: \" Roll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"FBcbDbTSXYNs4QNsRKPH911OvUI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Die","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","allNewDice","newArray","i","push","Math","floor","random","dice","setDice","useState","diceElements","map","die","value","fileName","_jsxFileName","lineNumber","columnNumber","rollDice","children","id","className","onClick","_c","$RefreshReg$"],"sources":["/Users/Ogaga/notes-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Die from \"./components/die\";\n\nexport default function App(){\n   \n    function allNewDice(){\n        const newArray = [] \n       for(var i=0; i<=9; i++){\n           newArray.push(Math.floor(Math.random() * 7))\n        }\n       return (newArray)\n    } \n\nconst [dice, setDice] = React.useState(allNewDice())\nconst diceElements = dice.map( die => <Die key=\"\" value={die}/>)\n\nfunction rollDice(){\n    setDice(allNewDice())\n}\n\n\n\n\n    return(\n        <> \n        <main id=\"appview\">\n<div id=\"textarea\">\n            <h1>Tenzies</h1>\n            <p>Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n           </div>\n\n           \n        <div className=\"dice\">\n        {diceElements}\n        </div>\n\n\n        <div className=\"rollbtn-div\">\n        <button id=\"rollbtn\" onClick={rollDice}> Roll</button>\n  \n        </div>\n         </main>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,eAAe,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EAEzB,SAASC,UAAUA,CAAA,EAAE;IACjB,MAAMC,QAAQ,GAAG,EAAE;IACpB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAE,CAAC,EAAEA,CAAC,EAAE,EAAC;MACnBD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IAC/C;IACD,OAAQL,QAAQ;EACnB;EAEJ,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAACT,UAAU,EAAE,CAAC;EACpD,MAAMU,YAAY,GAAGH,IAAI,CAACI,GAAG,CAAEC,GAAG,iBAAIjB,OAAA,CAACF,GAAG;IAAQoB,KAAK,EAAED;EAAI,GAAd,EAAE;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAc,CAAC;EAEhE,SAASC,QAAQA,CAAA,EAAE;IACfV,OAAO,CAACR,UAAU,EAAE,CAAC;EACzB;EAKI,oBACIL,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACAxB,OAAA;MAAMyB,EAAE,EAAC,SAAS;MAAAD,QAAA,gBAC1BxB,OAAA;QAAKyB,EAAE,EAAC,UAAU;QAAAD,QAAA,gBACNxB,OAAA;UAAAwB,QAAA,EAAI;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAChBtB,OAAA;UAAAwB,QAAA,EAAG;QAAiG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnG,eAGTtB,OAAA;QAAK0B,SAAS,EAAC,MAAM;QAAAF,QAAA,EACpBT;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eAGNtB,OAAA;QAAK0B,SAAS,EAAC,aAAa;QAAAF,QAAA,eAC5BxB,OAAA;UAAQyB,EAAE,EAAC,SAAS;UAACE,OAAO,EAAEJ,QAAS;UAAAC,QAAA,EAAC;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEhD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE,iBACL;AAEX;AAAClB,EAAA,CAzCuBD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}