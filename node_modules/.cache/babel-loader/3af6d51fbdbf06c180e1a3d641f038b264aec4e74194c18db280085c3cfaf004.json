{"ast":null,"code":"var _jsxFileName = \"/Users/Ogaga/notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Die from \"./components/die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [dice, setDice] = React.useState(allNewDice());\n  function allNewDice() {\n    const newArray = [];\n    for (let i = 0; i < 10; i++) {\n      newArray.push(generateNewDie());\n    }\n    return newArray;\n  }\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n  const [count, setCount] = React.useState(0);\n  function holdDice(event, id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? {\n        ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n    setCount(count + 1);\n  }\n  function rollDice() {\n    setDice(olddice => olddice.map(die => {\n      return die.isHeld ? die : generateNewDie();\n    }));\n  }\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }, this));\n  const [tenzies, setTenzies] = React.useState(false);\n  React.useEffect(() => {\n    const allHeld = dice.every(die => die.isHeld);\n    const firstvalue = dice[0].value;\n    const checkvalue = dice.every(die => die.value === firstvalue);\n    if (allHeld && checkvalue) {\n      setTenzies(true);\n    }\n  }, [dice]);\n  function renewGame() {\n    setDice(allNewDice());\n    setTenzies(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"appview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"textarea\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tenzies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice\",\n        children: diceElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rollbtn-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"rollbtn\",\n          onClick: tenzies ? renewGame : rollDice,\n          children: tenzies ? \"Start again\" : \"Roll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), tenzies && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"It took \", count, \" rolls to win the game\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"7r09tJkVUy0SMT3x67aZR7MBU4Y=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Die","nanoid","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dice","setDice","useState","allNewDice","newArray","i","push","generateNewDie","value","Math","ceil","random","isHeld","id","count","setCount","holdDice","event","oldDice","map","die","rollDice","olddice","diceElements","fileName","_jsxFileName","lineNumber","columnNumber","tenzies","setTenzies","useEffect","allHeld","every","firstvalue","checkvalue","renewGame","children","className","onClick","_c","$RefreshReg$"],"sources":["/Users/Ogaga/notes-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Die from \"./components/die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\n\nexport default function App(){\n    const [dice, setDice] = React.useState(allNewDice())\n   \n    function allNewDice(){\n        const newArray = []\n        for (let i = 0; i <10; i++) {\n            newArray.push(generateNewDie())\n           }\n       return (newArray)     \n    } \n \n    function generateNewDie() {\n        return {\n            value: Math.ceil(Math.random() * 6),\n            isHeld: false,\n            id: nanoid()\n        }\n    }\n    \n    const [count,setCount] = React.useState(0)\n    function holdDice(event, id){\n        setDice(oldDice => oldDice.map(die => {\n            return die.id === id ? \n                {...die, isHeld: !die.isHeld} :\n                die\n        }))\n        setCount(count+1)   \n        \n    }\n    \n\n     \n    \n \n    \n    function rollDice(){\n        setDice( olddice => olddice.map(\n            die =>  {\n                return die.isHeld ?\n                 die : generateNewDie()\n            }   \n            ) ) \n            }\n\nconst diceElements = dice.map( die => \n\n<Die \nkey={die.id} \nvalue={die.value}\nisHeld = {die.isHeld}\nholdDice ={() => holdDice(die.id)}\n/>\n)\n\n\n\nconst [tenzies, setTenzies] = React.useState(false)\n\n  React.useEffect( ()=> {\nconst allHeld = dice.every(die => die.isHeld)\nconst firstvalue = dice[0].value\nconst checkvalue = dice.every(die => die.value === firstvalue)\nif (allHeld && checkvalue){\n   setTenzies(true)\n   \n}\n } , [dice]\n)\n\n\nfunction renewGame(){\nsetDice(allNewDice())\nsetTenzies(false)\n}\n \n    return( \n        <> \n        <main id=\"appview\">\n<div id=\"textarea\"> \n            <h1>Tenzies</h1>\n            <p>Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n           </div>\n\n           \n        <div className=\"dice\">\n        {diceElements}\n        \n        </div>  \n\n\n        <div className=\"rollbtn-div\">\n        <button id=\"rollbtn\" onClick={ tenzies? renewGame : rollDice}>{tenzies ? \"Start again\" : \"Roll\"}</button>\n        { tenzies && <Confetti/> }\n  \n        </div>\n\n     \n         </main>\n        { tenzies && <p>It took {count} rolls to win the game</p> }\n        </>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}