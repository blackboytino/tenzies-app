{"ast":null,"code":"var _jsxFileName = \"/Users/Ogaga/notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport SplitPane from \"react-split-pane\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [notes, setNotes] = React.useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? {\n        ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(SplitPane, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zr3fR/Y72UJ7lcGS2GGpc54VwOs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","SplitPane","nanoid","jsxDEV","_jsxDEV","App","_s","notes","setNotes","useState","JSON","parse","localStorage","getItem","currentNoteId","setCurrentNoteId","id","useEffect","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","children","length","sizes","direction","className","currentNote","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/Ogaga/notes-app/src/App.js"],"sourcesContent":["\nimport React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\"\nimport SplitPane from \"react-split-pane\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n    \n    const [notes, setNotes] = React.useState(\n        JSON.parse(localStorage.getItem(\"notes\")) || []\n    )\n    const [currentNoteId, setCurrentNoteId] = React.useState(\n        (notes[0] && notes[0].id) || \"\"\n    )\n    \n    React.useEffect(() => {\n        localStorage.setItem(\"notes\", JSON.stringify(notes))\n    }, [notes])\n    \n    function createNewNote() {\n        const newNote = {\n            id: nanoid(),\n            body: \"# Type your markdown note's title here\"\n        }\n        setNotes(prevNotes => [newNote, ...prevNotes])\n        setCurrentNoteId(newNote.id)\n    }\n    \n    function updateNote(text) {\n        setNotes(oldNotes => oldNotes.map(oldNote => {\n            return oldNote.id === currentNoteId\n                ? { ...oldNote, body: text }\n                : oldNote\n        }))\n    }\n    \n    function findCurrentNote() {\n        return notes.find(note => {\n            return note.id === currentNoteId\n        }) || notes[0]\n    }\n    \n    return (\n        <main>\n        {\n            notes.length > 0 \n            ?\n            <SplitPane\n                sizes={[30, 70]} \n                direction=\"horizontal\" \n                className=\"split\"\n            >\n                <Sidebar\n                    notes={notes}\n                    currentNote={findCurrentNote()}\n                    setCurrentNoteId={setCurrentNoteId}\n                    newNote={createNewNote}\n                />\n                {\n                    currentNoteId && \n                    notes.length > 0 &&\n                    <Editor \n                        currentNote={findCurrentNote()} \n                        updateNote={updateNote} \n                    />\n                }\n            </SplitPane>\n            :\n            <div className=\"no-notes\">\n                <h1>You have no notes</h1>\n                <button \n                    className=\"first-note\" \n                    onClick={createNewNote}\n                >\n                    Create one now\n                </button>\n            </div>\n            \n        }\n        </main>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}